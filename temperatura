#!/usr/bin/env bash
#
# Script para calcular média de temperatura da CPU usando informações
# obtidas através do comando "sensors" (pacote lm-sensor)
#
# Versão 1.0
#
# Criado por Marangão - Maio 05, 2021
# juniormarangao@gmail.com
#
# Licensa GPL
#
# Exemplo de uso:
# 

readonly DEPENDENCIES=(sed grep sensors cut python) # array de checagem

checkDependencies() {
  local errorFound=0

  for command in "${DEPENDENCIES[@]}"; do
    if ! which "$command" > /dev/null ; then
      echo "ERRO: Comando não encontrado '$command'" >&2
      errorFound=1
    fi
  done

  if [[ "$errorFound" != "0" ]]; then # Teste de error
    echo "---IMPOSSÍVEL CONTINUAR---"
    echo "Esse script precisa dos comandos listados acima" >&2
    echo "Instale-os e/ou verifique se estão no seu \$PATH" >&2
    exit 1
  fi
}

if [[ $(uname -m | cut -c -3) = "arm" ]]; then
	armtemp=$(cat /sys/class/thermal/thermal_zone0/temp)
	cvalue=$(python -c "print($armtemp / 1000.0)")
	echo -e "
	\033[01mA temperatura do processador é \033[01;31m$cvalueºC\033[00m
	"
	exit 0
fi

checkDependencies # Chamada da função

# Busca da quantidade de Core para o cálculo correto
qtdCPU=$(lscpu | sed -n '/CPU(s)\:/p' | sed 's/CPU(s)\://g' | sed 's/ //g')

# Loop para soma da temperatura de cada Core.
for (( i=0; i<"$qtdCPU"; i++ )); do
	core=$(sensors | grep "Core $i:" | cut -d '(' -f1 | cut -d '+' -f2 | cut -d 'C' -f1 | sed 's/.$//g')
	if [[ -z $soma ]]; then
		soma=0
	fi
	# Chamada do python para cálculo de pontos flutuantes.
	soma=$(python -c "print($core + $soma)")
	
done

# Chamada python para cálculo de pontos flutuantes
media=$(python -c "print($soma / $qtdCPU)")

echo -e "
\033[01mA temperatura média do processador é \033[01;31m$mediaºC\033[00m
"

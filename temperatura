#!/usr/bin/env bash
#
# Script para calcular média de temperatura da CPU usando informações
# obtidas através do comando "sensors" (pacote lm-sensor)
#
# Versão 1.0
# Versão 1.1 -	Adicionado verificação para arquitetura ARM
# Versão 1.2 -	Redução de pipes para otimização de código.
# Versãõ 1.3 -	Correção de core/thread.
# Versão 1.4 -	Adição de opções de ajuda e forma de exibição da temperatura.
# Versão 1.5 -	Opções de ajuda contempla também em arquitetura ARM.
# Versão 1.6 -	Adição de erro quando executado em VM mesmo com as dependências ok
# Versão 1.6 -	Correção em caso de arquitetura 64bit ARM (aarch64)
# Versão 2.0 -	Substituição do uso do Python para BC.
#		Correção de checagem de arquitetura de processador.
# Versão 2.1 -	Correção no cálculo de multi-core
#
# Criado por Marangão - Maio 05, 2021
# juniormarangao@gmail.com
#
# Licensa GPL
#
# Exemplo de uso:
# 

basename="$0"

readonly DEPENDENCIES=(sed grep sensors cut bc) # array de checagem

checkDependencies() {
  local errorFound=0

  for command in "${DEPENDENCIES[@]}"; do
    if ! which "$command" > /dev/null ; then
      echo "ERRO: Comando não encontrado '$command'" >&2
      errorFound=1
    fi
  done

  if [[ "$errorFound" != "0" ]]; then # Teste de error
    echo "---IMPOSSÍVEL CONTINUAR---"
    echo "Esse script precisa dos comandos listados acima" >&2
    echo "Instale-os e/ou verifique se estão no seu \$PATH" >&2
    exit 1
  fi
}

rodaArm() {
	armtemp=$(cat /sys/class/thermal/thermal_zone0/temp)
	media=$(bc <<< "scale=2;$armtemp/1000.0")
}

rodaCore() {
	checkDependencies # Chamada da função
        if ! sensors > /dev/null ; then # Detecção de sensores, se for VM mesmo instalado não funciona.
                echo -e "\n\033[01;31mNÃO FORAM DETECTADOS SENSORES - POSSIVEL VM\033[00m\n"
                exit 1
        fi

	# Busca da quantidade de Core para o cálculo correto
	qtdCPU=$(lscpu | sed -n '1,/CPU(s)/{s/CPU(s)\: \+ //gp}')

	# Loop para soma da temperatura de cada Core.
	for (( i=1; i<"$qtdCPU"; i++ )); do
		#core=$(sensors | grep "Core $i:" | cut -d '(' -f1 | cut -d '+' -f2 | cut -d 'C' -f1 | sed 's/.$//g')
		core=$(sensors | grep -iw core | awk '{print $3}' | tr -d \+C | sed 's/.$//g' | sed -n ''"$i"'p')
		if [[ -z $soma ]]; then
			soma=0
		fi
		# Chamada do bc para cálculo de pontos flutuantes.
		if [[ -z $core ]]; then
			qtdCPU=($i)
		else
			soma=$(bc -l <<< "$core+$soma")
		fi
	done

	# Chamada do bc para cálculo de pontos flutuantes
	media=$(bc <<< "sacle=2;$soma/$qtdCPU")
}

cpuarch=$(uname -m)
case "$@" in
	-h|--help)
		echo "
		-h	--help			Ajuda
		-V	--version		Mostra versão do programa
		-jn	--just-number		Imprime apenas o valor numérico da temperatura
		"
		exit 0
	;;
	-jn|--just-number)
		if [[ $(cut -c -3 <<< $cpuarch) = "arm" ]]; then
			rodaArm
		elif [[ $(cut -c -3 <<< $cpuarch) = "aar" ]]; then
			rodaArm
		else
			rodaCore
		fi
		echo $media
		exit 0
	;;
	-V|--version)
		echo -e "$basename $(grep '^# Versão ' "$0" | tail -1 | cut -d ':' -f1 | tr -d \# | cut -d '-' -f1)"
		exit 0
	;;
	*)
		if [[ -z "$@" ]]; then
			if [[ $(cut -c -3 <<< $cpuarch) = "arm" ]]; then
				rodaArm
			elif [[ $(cut -c -3 <<< $cpuarch) = "aar" ]]; then
				rodaArm
			else
				rodaCore
			fi
			echo -e "\n\033[01mA temperatura média do processador é \033[01;31m$mediaºC\033[00m\n"
			exit 0
		else
			echo -e "\n\033[01mInválido, use \033[01;31m$basename -h\033[00m \033[01mou \033[01;31m$basename --help\033[00m \033[01mpara ajuda\033[00m\n"
			exit 1
		fi
esac

